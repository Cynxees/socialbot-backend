generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// USER
model User {
  id           Int         @id @default(autoincrement())
  username     String      @unique
  displayName  String?
  password     String
  role         Role        @default(user)
  postGroups   PostGroup[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  googleUserId Int?        @unique
  googleUser   GoogleUser? @relation(fields: [googleUserId], references: [id])
}

enum Role {
  super_admin
  admin
  user
}

model GoogleUser {
  id          Int         @id @default(autoincrement())
  refreshToken String
  accessToken String
  tokenType   BearerToken
  expiresIn   DateTime
  scopes      String[]
  User        User?
}

enum BearerToken {
  bearer
}

// POST
model Post {
  id            Int       @id @default(autoincrement())
  title         String
  description   String?
  location      String?
  published     Boolean   @default(false)
  tags          String[]  @default([])
  hashtags      String[]  @default([])
  postGroupId   Int?
  postGroup     PostGroup? @relation(fields: [postGroupId], references: [id])
  

  @@index([title])

}

model PostGroup {
  id            Int      @id @default(autoincrement())
  authorId      Int
  scheduledDate DateTime
  isPublished   Boolean  @default(false)
  fileIds       Int[]    @default([])
  posts         Post[]
  author        User     @relation(fields: [authorId], references: [id])
}





model File {
  id        Int       @id @default(autoincrement())
  url       String
  mediaType MediaType @default(image)
}

enum MediaType {
  image
  video
}

enum Destination {
  INSTAGRAM_POST
  INSTAGRAM_REEL
  TIKTOK_SLIDES
  TIKTOK_VIDEO
  YOUTUBE_SHORT
  YOUTUBE_VIDEO
}

enum ContentType {
  SINGLE_SHORT_FORM_CONTENT
  SINGLE_VIDEO_CONTENT
  SINGLE_IMAGE_CONTENT
  MULTIPLE_MIXED_CONTENT
}
