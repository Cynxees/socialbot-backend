generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// USER
model User {
  id           Int         @id @default(autoincrement())
  username     String      @unique
  displayName  String?
  password     String
  role         Role        @default(user)
  posts        Post[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  googleUserId Int?        @unique
  googleUser   GoogleUser? @relation(fields: [googleUserId], references: [id])
}

enum Role {
  super_admin
  admin
  user
}

model GoogleUser {
  id          Int         @id @default(autoincrement())
  refreshToken String
  accessToken String
  tokenType   BearerToken
  expiresIn   DateTime
  scopes      String[]
  User        User?
}

enum BearerToken {
  bearer
}

// POST
model Post {
  id             Int       @default(autoincrement()) @id
  title          String
  caption        String?
  location       String?
  music          String?
  published      Boolean?  @default(false)
  scheduledDate  DateTime?
  tags           String[]  @default([])
  hashtags       String[]  @default([])
  author         User     @relation(fields: [authorId], references: [id])
  authorId       Int
  fileIds        Int[]     @default([])

  @@index([scheduledDate])     
  @@index([title])     
  @@index([authorId])  
  @@index([scheduledDate, authorId])
}

model File {
  id        Int        @default(autoincrement()) @id
  url       String
  mediaType MediaType  @default(image)
}

enum MediaType {
  image
  video
  both
}

