// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// USER
model User {
  id           Int         @id @default(autoincrement())
  username     String      @unique
  displayName  String?
  password     String
  role         Role        @default(user)
  posts        Post[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  googleUserId Int?        @unique
  googleUser   GoogleUser? @relation(fields: [googleUserId], references: [id])
}

enum Role {
  super_admin
  admin
  user
}

model GoogleUser {
  id          Int         @id @default(autoincrement())
  accessToken String
  tokenType   BearerToken
  expiresIn   DateTime
  scopes      String[]
  User        User?
}

enum BearerToken {
  bearer
}

// POST
model Post {
  id            Int       @id @default(autoincrement())
  title         String
  caption       String?
  url           String[]  @default([])
  mediaType     MediaType @default(image)
  location      String?
  music         String?
  published     Boolean?  @default(false)
  scheduledDate DateTime?
  tags          String[]  @default([])
  hashtags      String[]  @default([])
  author        User?     @relation(fields: [authorId], references: [id])
  authorId      Int?

  @@index([scheduledDate])
  @@index([title])
  @@index([authorId])
  @@index([scheduledDate, authorId])
}

enum MediaType {
  image
  video
  both
}

model File {
  id  Int    @id @default(autoincrement())
  url String
}
