version: '3.5' 
services: 

  db: 
    image: postgres 
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres 
      - POSTGRES_DB=socialbot
    container_name: db
    volumes:
      - pgvolume:/var/lib/postgresql/data 
    ports:
      - '5432:5432' 
    networks:
      - backend-network

  app: 
    build: 
      context: . 
      dockerfile: Dockerfile 
    container_name: app
    ports: 
      - '3000:3000' 
    depends_on: 
      - db 
    volumes:
        - ./src:/app/src 
    networks:
      - backend-network
    command: >
      /bin/sh -c "
      npm run db:deploy;
      npm run start:dev;
      "
  docs: 
    build: 
      context: . 
    container_name: doc
    ports: 
      - '8080:8080' 
    depends_on: 
      - app
    volumes:
        - ./src:/app/src 
    networks:
      - backend-network
    command: >
      /bin/sh -c "
      npx @compodoc/compodoc -p tsconfig.json -s
      "

  pgadmin:
    image: dpage/pgadmin4 
    restart: always 
    container_name: pg4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com 
      - PGADMIN_DEFAULT_PASSWORD=pgadmin4 
    ports: 
      - '5050:80' 
    depends_on: 
        - db
    networks:
      - backend-network

volumes:
  pgvolume:
    driver: local
networks:
    backend-network:
      driver: bridge